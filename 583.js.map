{"version":3,"sources":["webpack://react-localized/../node_modules/date-fns/esm/locale/ru/_lib/formatDistance/index.js","webpack://react-localized/../node_modules/date-fns/esm/locale/ru/_lib/formatLong/index.js","webpack://react-localized/../node_modules/date-fns/esm/_lib/isSameUTCWeek/index.js","webpack://react-localized/../node_modules/date-fns/esm/locale/ru/_lib/formatRelative/index.js","webpack://react-localized/../node_modules/date-fns/esm/locale/ru/_lib/localize/index.js","webpack://react-localized/../node_modules/date-fns/esm/locale/ru/index.js","webpack://react-localized/../node_modules/date-fns/esm/locale/ru/_lib/match/index.js","webpack://react-localized/../examples/locales/ru.js","webpack://react-localized/../react-localized-loader/lib/examples/locales/ru.po"],"names":["declension","scheme","count","undefined","one","rem10","rem100","singularNominative","replace","singularGenitive","pluralGenitive","buildLocalizeTokenFn","options","addSuffix","comparison","future","regular","past","formatDistanceLocale","lessThanXSeconds","xSeconds","halfAMinute","_","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","any","isSameUTCWeek","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeftStartOfWeek","startOfUTCWeek","dateRightStartOfWeek","getTime","accusativeWeekdays","thisWeek","day","weekday","formatRelativeLocale","lastWeek","baseDate","getUTCDay","yesterday","today","tomorrow","nextWeek","other","ordinalNumber","dirtyNumber","dirtyOptions","unit","String","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","Number","month","formattingValues","defaultFormattingWidth","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","code","formatDistance","token","formatLong","formatRelative","format","localize","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","value","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","index","weekStartsOn","firstWeekContainsDate","createLocale","messages","formatDate","formatStr","locale","module","exports"],"mappings":"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","file":"583.js","sourcesContent":["function declension(scheme, count) {\n  // scheme for count=1 exists\n  if (scheme.one !== undefined && count === 1) {\n    return scheme.one;\n  }\n\n  var rem10 = count % 10;\n  var rem100 = count % 100; // 1, 21, 31, ...\n\n  if (rem10 === 1 && rem100 !== 11) {\n    return scheme.singularNominative.replace('{{count}}', count); // 2, 3, 4, 22, 23, 24, 32 ...\n  } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {\n    return scheme.singularGenitive.replace('{{count}}', count); // 5, 6, 7, 8, 9, 10, 11, ...\n  } else {\n    return scheme.pluralGenitive.replace('{{count}}', count);\n  }\n}\n\nfunction buildLocalizeTokenFn(scheme) {\n  return function (count, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        if (scheme.future) {\n          return declension(scheme.future, count);\n        } else {\n          return 'через ' + declension(scheme.regular, count);\n        }\n      } else {\n        if (scheme.past) {\n          return declension(scheme.past, count);\n        } else {\n          return declension(scheme.regular, count) + ' назад';\n        }\n      }\n    } else {\n      return declension(scheme.regular, count);\n    }\n  };\n}\n\nvar formatDistanceLocale = {\n  lessThanXSeconds: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше секунды',\n      singularNominative: 'меньше {{count}} секунды',\n      singularGenitive: 'меньше {{count}} секунд',\n      pluralGenitive: 'меньше {{count}} секунд'\n    },\n    future: {\n      one: 'меньше, чем через секунду',\n      singularNominative: 'меньше, чем через {{count}} секунду',\n      singularGenitive: 'меньше, чем через {{count}} секунды',\n      pluralGenitive: 'меньше, чем через {{count}} секунд'\n    }\n  }),\n  xSeconds: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} секунда',\n      singularGenitive: '{{count}} секунды',\n      pluralGenitive: '{{count}} секунд'\n    },\n    past: {\n      singularNominative: '{{count}} секунду назад',\n      singularGenitive: '{{count}} секунды назад',\n      pluralGenitive: '{{count}} секунд назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} секунду',\n      singularGenitive: 'через {{count}} секунды',\n      pluralGenitive: 'через {{count}} секунд'\n    }\n  }),\n  halfAMinute: function (_, options) {\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'через полминуты';\n      } else {\n        return 'полминуты назад';\n      }\n    }\n\n    return 'полминуты';\n  },\n  lessThanXMinutes: buildLocalizeTokenFn({\n    regular: {\n      one: 'меньше минуты',\n      singularNominative: 'меньше {{count}} минуты',\n      singularGenitive: 'меньше {{count}} минут',\n      pluralGenitive: 'меньше {{count}} минут'\n    },\n    future: {\n      one: 'меньше, чем через минуту',\n      singularNominative: 'меньше, чем через {{count}} минуту',\n      singularGenitive: 'меньше, чем через {{count}} минуты',\n      pluralGenitive: 'меньше, чем через {{count}} минут'\n    }\n  }),\n  xMinutes: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} минута',\n      singularGenitive: '{{count}} минуты',\n      pluralGenitive: '{{count}} минут'\n    },\n    past: {\n      singularNominative: '{{count}} минуту назад',\n      singularGenitive: '{{count}} минуты назад',\n      pluralGenitive: '{{count}} минут назад'\n    },\n    future: {\n      singularNominative: 'через {{count}} минуту',\n      singularGenitive: 'через {{count}} минуты',\n      pluralGenitive: 'через {{count}} минут'\n    }\n  }),\n  aboutXHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} часа',\n      singularGenitive: 'около {{count}} часов',\n      pluralGenitive: 'около {{count}} часов'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} час',\n      singularGenitive: 'приблизительно через {{count}} часа',\n      pluralGenitive: 'приблизительно через {{count}} часов'\n    }\n  }),\n  xHours: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} час',\n      singularGenitive: '{{count}} часа',\n      pluralGenitive: '{{count}} часов'\n    }\n  }),\n  xDays: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} день',\n      singularGenitive: '{{count}} дня',\n      pluralGenitive: '{{count}} дней'\n    }\n  }),\n  aboutXWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} недели',\n      singularGenitive: 'около {{count}} недель',\n      pluralGenitive: 'около {{count}} недель'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} неделю',\n      singularGenitive: 'приблизительно через {{count}} недели',\n      pluralGenitive: 'приблизительно через {{count}} недель'\n    }\n  }),\n  xWeeks: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} неделя',\n      singularGenitive: '{{count}} недели',\n      pluralGenitive: '{{count}} недель'\n    }\n  }),\n  aboutXMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} месяца',\n      singularGenitive: 'около {{count}} месяцев',\n      pluralGenitive: 'около {{count}} месяцев'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} месяц',\n      singularGenitive: 'приблизительно через {{count}} месяца',\n      pluralGenitive: 'приблизительно через {{count}} месяцев'\n    }\n  }),\n  xMonths: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} месяц',\n      singularGenitive: '{{count}} месяца',\n      pluralGenitive: '{{count}} месяцев'\n    }\n  }),\n  aboutXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'около {{count}} года',\n      singularGenitive: 'около {{count}} лет',\n      pluralGenitive: 'около {{count}} лет'\n    },\n    future: {\n      singularNominative: 'приблизительно через {{count}} год',\n      singularGenitive: 'приблизительно через {{count}} года',\n      pluralGenitive: 'приблизительно через {{count}} лет'\n    }\n  }),\n  xYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: '{{count}} год',\n      singularGenitive: '{{count}} года',\n      pluralGenitive: '{{count}} лет'\n    }\n  }),\n  overXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'больше {{count}} года',\n      singularGenitive: 'больше {{count}} лет',\n      pluralGenitive: 'больше {{count}} лет'\n    },\n    future: {\n      singularNominative: 'больше, чем через {{count}} год',\n      singularGenitive: 'больше, чем через {{count}} года',\n      pluralGenitive: 'больше, чем через {{count}} лет'\n    }\n  }),\n  almostXYears: buildLocalizeTokenFn({\n    regular: {\n      singularNominative: 'почти {{count}} год',\n      singularGenitive: 'почти {{count}} года',\n      pluralGenitive: 'почти {{count}} лет'\n    },\n    future: {\n      singularNominative: 'почти через {{count}} год',\n      singularGenitive: 'почти через {{count}} года',\n      pluralGenitive: 'почти через {{count}} лет'\n    }\n  })\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  return formatDistanceLocale[token](count, options);\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: \"EEEE, d MMMM y 'г.'\",\n  long: \"d MMMM y 'г.'\",\n  medium: \"d MMM y 'г.'\",\n  short: 'dd.MM.y'\n};\nvar timeFormats = {\n  full: 'H:mm:ss zzzz',\n  long: 'H:mm:ss z',\n  medium: 'H:mm:ss',\n  short: 'H:mm'\n};\nvar dateTimeFormats = {\n  any: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'any'\n  })\n};\nexport default formatLong;","import startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfUTCWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfUTCWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameUTCWeek from \"../../../../_lib/isSameUTCWeek/index.js\";\nvar accusativeWeekdays = ['воскресенье', 'понедельник', 'вторник', 'среду', 'четверг', 'пятницу', 'субботу'];\n\nfunction lastWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в прошлое \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в прошлый \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в прошлую \" + weekday + \" в' p\";\n  }\n}\n\nfunction thisWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  if (day === 2\n  /* Tue */\n  ) {\n      return \"'во \" + weekday + \" в' p\";\n    } else {\n    return \"'в \" + weekday + \" в' p\";\n  }\n}\n\nfunction nextWeek(day) {\n  var weekday = accusativeWeekdays[day];\n\n  switch (day) {\n    case 0:\n      return \"'в следующее \" + weekday + \" в' p\";\n\n    case 1:\n    case 2:\n    case 4:\n      return \"'в следующий \" + weekday + \" в' p\";\n\n    case 3:\n    case 5:\n    case 6:\n      return \"'в следующую \" + weekday + \" в' p\";\n  }\n}\n\nvar formatRelativeLocale = {\n  lastWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return lastWeek(day);\n    }\n  },\n  yesterday: \"'вчера в' p\",\n  today: \"'сегодня в' p\",\n  tomorrow: \"'завтра в' p\",\n  nextWeek: function (date, baseDate, options) {\n    var day = date.getUTCDay();\n\n    if (isSameUTCWeek(date, baseDate, options)) {\n      return thisWeek(day);\n    } else {\n      return nextWeek(day);\n    }\n  },\n  other: 'P'\n};\nexport default function formatRelative(token, date, baseDate, options) {\n  var format = formatRelativeLocale[token];\n\n  if (typeof format === 'function') {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n}","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['до н.э.', 'н.э.'],\n  abbreviated: ['до н. э.', 'н. э.'],\n  wide: ['до нашей эры', 'нашей эры']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['1-й кв.', '2-й кв.', '3-й кв.', '4-й кв.'],\n  wide: ['1-й квартал', '2-й квартал', '3-й квартал', '4-й квартал']\n};\nvar monthValues = {\n  narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д'],\n  abbreviated: ['янв.', 'фев.', 'март', 'апр.', 'май', 'июнь', 'июль', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.'],\n  wide: ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь', 'июль', 'август', 'сентябрь', 'октябрь', 'ноябрь', 'декабрь']\n};\nvar formattingMonthValues = {\n  narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д'],\n  abbreviated: ['янв.', 'фев.', 'мар.', 'апр.', 'мая', 'июн.', 'июл.', 'авг.', 'сент.', 'окт.', 'нояб.', 'дек.'],\n  wide: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря']\n};\nvar dayValues = {\n  narrow: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С'],\n  short: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n  abbreviated: ['вск', 'пнд', 'втр', 'срд', 'чтв', 'птн', 'суб'],\n  wide: ['воскресенье', 'понедельник', 'вторник', 'среда', 'четверг', 'пятница', 'суббота']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полн.',\n    noon: 'полд.',\n    morning: 'утро',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ночь'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полн.',\n    noon: 'полд.',\n    morning: 'утро',\n    afternoon: 'день',\n    evening: 'веч.',\n    night: 'ночь'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полночь',\n    noon: 'полдень',\n    morning: 'утро',\n    afternoon: 'день',\n    evening: 'вечер',\n    night: 'ночь'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полн.',\n    noon: 'полд.',\n    morning: 'утра',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночи'\n  },\n  abbreviated: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полн.',\n    noon: 'полд.',\n    morning: 'утра',\n    afternoon: 'дня',\n    evening: 'веч.',\n    night: 'ночи'\n  },\n  wide: {\n    am: 'ДП',\n    pm: 'ПП',\n    midnight: 'полночь',\n    noon: 'полдень',\n    morning: 'утра',\n    afternoon: 'дня',\n    evening: 'вечера',\n    night: 'ночи'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var options = dirtyOptions || {};\n  var unit = String(options.unit);\n  var suffix;\n\n  if (unit === 'date') {\n    suffix = '-е';\n  } else if (unit === 'week' || unit === 'minute' || unit === 'second') {\n    suffix = '-я';\n  } else {\n    suffix = '-й';\n  }\n\n  return dirtyNumber + suffix;\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingMonthValues,\n    defaultFormattingWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'any',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary Russian locale.\n * @language Russian\n * @iso-639-2 rus\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'ru',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(-?(е|я|й|ое|ье|ая|ья|ый|ой|ий|ый))?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^((до )?н\\.?\\s?э\\.?)/i,\n  abbreviated: /^((до )?н\\.?\\s?э\\.?)/i,\n  wide: /^(до нашей эры|нашей эры|наша эра)/i\n};\nvar parseEraPatterns = {\n  any: [/^д/i, /^н/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^[1234](-?[ыои]?й?)? кв.?/i,\n  wide: /^[1234](-?[ыои]?й?)? квартал/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[яфмаисонд]/i,\n  abbreviated: /^(янв|фев|март?|апр|ма[йя]|июн[ья]?|июл[ья]?|авг|сент?|окт|нояб?|дек)\\.?/i,\n  wide: /^(январ[ья]|феврал[ья]|марта?|апрел[ья]|ма[йя]|июн[ья]|июл[ья]|августа?|сентябр[ья]|октябр[ья]|октябр[ья]|ноябр[ья]|декабр[ья])/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^я/i, /^ф/i, /^м/i, /^а/i, /^м/i, /^и/i, /^и/i, /^а/i, /^с/i, /^о/i, /^н/i, /^я/i],\n  any: [/^я/i, /^ф/i, /^мар/i, /^ап/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^ав/i, /^с/i, /^о/i, /^н/i, /^д/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[впсч]/i,\n  short: /^(вс|во|пн|по|вт|ср|чт|че|пт|пя|сб|су)\\.?/i,\n  abbreviated: /^(вск|вос|пнд|пон|втр|вто|срд|сре|чтв|чет|птн|пят|суб).?/i,\n  wide: /^(воскресень[ея]|понедельника?|вторника?|сред[аы]|четверга?|пятниц[аы]|суббот[аы])/i\n};\nvar parseDayPatterns = {\n  narrow: [/^в/i, /^п/i, /^в/i, /^с/i, /^ч/i, /^п/i, /^с/i],\n  any: [/^в[ос]/i, /^п[он]/i, /^в/i, /^ср/i, /^ч/i, /^п[ят]/i, /^с[уб]/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  abbreviated: /^([дп]п|полн\\.?|полд\\.?|утр[оа]|день|дня|веч\\.?|ноч[ьи])/i,\n  wide: /^([дп]п|полночь|полдень|утр[оа]|день|дня|вечера?|ноч[ьи])/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^дп/i,\n    pm: /^пп/i,\n    midnight: /^полн/i,\n    noon: /^полд/i,\n    morning: /^у/i,\n    afternoon: /^д[ен]/i,\n    evening: /^в/i,\n    night: /^н/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import formatDate from 'date-fns/format'\nimport locale from 'date-fns/locale/ru'\nimport { createLocale } from 'react-localized'\nimport messages from './ru.po'\n\nexport default createLocale(messages, {\n  formatDate: (date, formatStr) => formatDate(date, formatStr, { locale }),\n  formats: {\n    date: 'dd MMMM yyyy',\n  },\n})\n","module.exports = {\"charset\":\"utf-8\",\"headers\":{\"Plural-Forms\":\"nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\"},\"translations\":{\"\":{\"${} apple\":{\"msgstr\":[\"${} яблоко\",\"${} яблока\",\"${} яблок\"]},\"apple\":{\"msgstr\":[\"яблоко\",\"яблока\",\"яблок\"]},\"Hello, World!\":{\"msgstr\":[\"Привет, Мир!\"]},\"My name is ${}\":{\"msgstr\":[\"Мое имя ${}\"]}},\"Context\":{\"${} table\":{\"msgctxt\":\"Context\",\"msgstr\":[\"${} стол\",\"${} стола\",\"${} столов\"]},\"table\":{\"msgctxt\":\"Context\",\"msgstr\":[\"стол\",\"стола\",\"столов\"]},\"Text with context\":{\"msgctxt\":\"Context\",\"msgstr\":[\"Текст с контекстом\"]},\"Text with context ${}\":{\"msgctxt\":\"Context\",\"msgstr\":[\"Текст с контекстом ${}\"]}}}};"],"sourceRoot":""}